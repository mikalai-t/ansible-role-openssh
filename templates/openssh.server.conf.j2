#jinja2: lstrip_blocks: True, trim_blocks: True

# This is the ssh server system-wide configuration file. See sshd_config(5) for more information on any settings used.

### ===================
### Basic configuration
### ===================

# Define which port sshd should listen to. Default only to '22'.
{% for port in openssh_server_ports_list %}
Port            {{ port }}
{% endfor %}

# Address family should always be limited to the active network configuration.
AddressFamily   {{ 'any' if openssh_network_ipv6_enabled else 'inet' }}

# Define which addresses 'sshd' should listen to. Default to '0.0.0.0', ie make sure you put your desired address in
# here, since otherwise sshd will listen to everyone.
{% for address in openssh_server_listen_interfaces_list %}
ListenAddress   {{ address }}
{% endfor %}

# List HostKeys for protocol ver.2 here
{% for key in openssh_server_host_key_files_list %}
HostKey         {{ key }}
{% endfor %}

# Logging, obsoletes QuietMode and FascistLogging
SyslogFacility  {{ openssh_server_syslog_facility|upper }}
LogLevel        {{ openssl_server_loglevel|upper }}


### ======================
### Security configuration
### ======================

# Set the protocol version to 2 for security reasons. Disables legacy support.
Protocol        2

# Make sure 'sshd' checks file modes and ownership before accepting logins. This prevents accidental misconfiguration.
StrictModes     yes

{% if openssh_version is defined and openssh_version is version_compare('7.6','<') %}
# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval     3600
ServerKeyBits               1024
{% endif %}

### ------------
### Cryptography
### ------------

{% if openssh_common_ciphers_list|length > 0 %}
# *** Ciphers ***
# If your clients don't support CTR (eg older versions), cbc will be added. CBC: is true if you want to connect with
# OpenSSL-base libraries e.g. ruby Net::SSH::Transport::CipherFactory requires cbc-versions of the given openssh
# ciphers to work see: http://net-ssh.github.com/net-ssh/classes/Net/SSH/Transport/CipherFactory.html
Ciphers {{ openssh_common_ciphers_list | join(',') }}
{% endif %}

{% if openssh_common_macs_list|length > 0 %}
# *** Hash algorithms ***
# Make sure not to use SHA1 for hashing, unless it is really necessary. Weak HMAC is sometimes required if older
# package versions are used e.g. Ruby's Net::SSH at around 2.2.* doesn't support sha2 for hmac, so this will have
# to be set true in this case.
MACs {{ openssh_common_macs_list | join(',') }}
{% endif %}

# Alternative setting, if OpenSSH version is below v5.9
#MACs hmac-ripemd160

{% if openssh_common_kex_list|length > 0 %}
# *** Key Exchange Algorithms (KEX) ***
# Make sure not to use SHA1 for kex, unless it is really necessary. Weak KEX is sometimes required if older package
# versions are used e.g. ruby's Net::SSH at around 2.2.* doesn't support sha2 for kex, so this will have to be set
# true in this case. Based on: https://bettercrypto.org/static/applied-crypto-hardening.pdf
KexAlgorithms {{ openssh_common_kex_list | join(',') }}
{% endif %}


### --------------
### Authentication
### --------------

# Either disable or only allow ssh root login via certificates.
PermitRootLogin             {{ openssh_server_permit_root_login if openssh_server_permit_root_login|length > 0 else ('prohibit-password' if (openssh_server_root_login_allowed|bool and (openssh_version is defined and openssh_version is version_compare('7.6','>='))) else 'without-password' if openssh_server_root_login_allowed|bool else 'no') }}

{% if openssh_version is defined and openssh_version is version_compare('7.6','<') %}
# Privilege Separation usually is turned on for security
UsePrivilegeSeparation      {{ openssh_server_privilege_separation|string }}
{% endif %}

LoginGraceTime              120s
MaxAuthTries                {{ openssh_server_max_auth_retries|int }}
MaxSessions                 10
MaxStartups                 10:30:100

# Enable public key authentication
PubkeyAuthentication                yes

# Never use host-based authentication. It can be exploited.
HostbasedAuthentication             no
# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts                        yes
{% if openssh_version is defined and openssh_version is version_compare('7.6','<') %}
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication             no
{% endif %}
# Uncomment if you do not trust ~/.ssh/known_hosts for RhostsRSAAuthentication
IgnoreUserKnownHosts                yes

# Set this to 'yes' to enable PAM authentication, account processing, and session processing. If this is enabled, PAM
# authentication will be allowed through the ChallengeResponseAuthentication and PasswordAuthentication. Depending on
# your PAM configuration, PAM authentication via ChallengeResponseAuthentication may bypass the setting of
# "PermitRootLogin without-password". If you just want the PAM account and session checks to run without PAM
# authentication, then enable this but set PasswordAuthentication and ChallengeResponseAuthentication to 'no'.
UsePAM                              {{ 'yes' if openssh_server_use_pam_allowed|bool else 'no' }}

{% if openssh_version is defined and openssh_version is version_compare('7.6','<') %}
# Secure Login directives.
UseLogin                            no
{% endif %}

# Disable password-based authentication. It can allow for potentially easier brute-force attacks.
PasswordAuthentication              no
# To enable empty passwords, change to "yes" (NOT RECOMMENDED)
PermitEmptyPasswords                no

# Enable challenge-response passwords (beware issues with some PAM modules and threads)
ChallengeResponseAuthentication     {{ 'yes' if openssh_server_challenge_response_auth_allowed|bool else 'no' }}

# The keyboard-interactive authentication is more complex request for arbitrary number of pieces of information.
# For each piece of information the server sends the label of the prompt. Moreover it allows the server to provide
# lenghty description of the overall "form". The server can also specify which inputs are secret (needs to be
# obfuscated when user types them) and which are not.
# Though in majority of cases the keyboard-interactive authentication is used to request a single "secret" password
# prompt, so there's hardly any difference to the password authentication.
# That's the difference from protocol perspective.
KbdInteractiveAuthentication        {{ 'yes' if openssh_server_keyboard_interactive_auth_allowed|bool else 'no' }}

{% if (ansible_os_family|lower != 'alpine') or (ansible_os_family|lower == 'alpine' and openssh_version is defined and openssh_version is version_compare('7.7','<')) %}
# Only enable Kerberos authentication if it is configured.
KerberosAuthentication      {{ 'yes' if openssh_server_kerberos_auth_allowed|bool else 'no' }}
# Decide whether you want 'sshd' to fall back to ordinary password authentication if Kerberos authentication fails
KerberosOrLocalPasswd       no
KerberosTicketCleanup       yes
{% endif %}

{% if (ansible_os_family|lower != 'alpine') or (ansible_os_family|lower == 'alpine' and openssh_version is defined and openssh_version is version_compare('7.7','<')) %}
# Only enable GSSAPI authentication if it is configured.
GSSAPIAuthentication        {{ 'yes' if openssh_server_gssapi_auth_allowed|bool else 'no' }}
GSSAPICleanupCredentials    yes
{% endif %}

# In case you do not use PAM ('UsePAM no'), you can alternatively restrict users and groups here. For key-based
# authentication this is not necessary, since all keys must be explicitly enabled.
{% if openssh_server_deny_users|string|length > 0 %}
DenyUsers       {{ openssh_server_deny_users|string }}
{% endif %}
{% if openssh_server_allow_users|string|length > 0 %}
AllowUsers      {{ openssh_server_allow_users|string }}
{% endif %}
{% if openssh_server_deny_groups|string|length > 0 %}
DenyGroups      {{ openssh_server_deny_groups|string }}
{% endif %}
{% if openssh_server_allow_groups|string|length > 0 %}
AllowGroups     {{ openssh_server_allow_groups|string }}
{% endif %}

{% if openssh_server_authorized_keys_file|string|length > 0 %}
AuthorizedKeysFile          {{ openssh_server_authorized_keys_file|string }}
{% endif %}
{% if openssh_server_authorized_keys_command|string|length > 0 %}
AuthorizedKeysCommand       {{ openssh_server_authorized_keys_command|string }}
AuthorizedKeysCommandUser   {{ openssh_server_authorized_keys_command_user|string }}
{% endif %}


### -------
### Network
### -------

# Disable TCP "Keep alive" since it is spoofable. Use 'ClientAlive' messages instead, they use the encrypted channel
TCPKeepAlive            no

# Manage 'ClientAlive' signals via interval and maximum count. This will periodically check up to a 'CountMax' number of
# times within 'Interval' timeframe, and abort the connection once these fail.
ClientAliveInterval     {{ openssh_server_client_alive_interval|int }}
ClientAliveCountMax     {{ openssh_server_client_alive_count|int }}

# Enable/disable tunneling
PermitTunnel            {{ 'yes' if openssh_server_permit_tunnel else 'no' }}

# Enable/disable forwarding tcp connections, no real advantage without denied shell access
AllowTcpForwarding      {{ 'yes' if openssh_server_tcp_forwarding_allowed else 'no' }}

# Disable agent forwarding, since local agent could be accessed through forwarded connection, no real advantages
# without denied shell access
AllowAgentForwarding    {{ 'yes' if openssh_server_agent_forwarding_allowed else 'no' }}

{% if openssh_server_gateway_ports|bool %}
# Port forwardings are forced to bind to the wildcard address
GatewayPorts            yes
{% elif openssh_server_gateway_ports|string == 'clientspecified' %}
# Clients allowed to specify which address to bind port forwardings to
GatewayPorts            clientspecified
{% else %}
# Do not allow remote port forwardings to bind to non-loopback addresses.
GatewayPorts            no
{% endif %}

# It is recommended to disable X11 forwarding, since local X11 display could be accessed through forwarded connection.
X11Forwarding           {{ 'yes' if openssh_server_x11_forwarding_allowed|bool else 'no' }}
{% if openssh_server_x11_forwarding_allowed|bool %}
X11DisplayOffset        10
{% endif %}
X11UseLocalhost         {{ 'yes' if openssh_server_x11_forwarding_allowed|bool else 'no' }}


### ==============================
### User environment configuration
### ==============================
{% if openssh_server_env_vars_allowed %}
PermitUserEnvironment   yes
# Allow client to pass locale environment variables
AcceptEnv               LANG LC_*
{%   for item in openssh_server_env_vars_allowed %}
AcceptEnv               {{ item }}
{%   endfor %}
{% else %}
PermitUserEnvironment   no
{% endif %}


### ===================
### Misc. configuration
### ===================

Compression             {{ 'yes' if openssh_server_compression_enabled|bool else 'no' }}

# Look up the remote host name, defaults to false from 6.8 (See: http://www.openssh.com/txt/release-6.8)
# Also directive 'UseDNS' is not allowed within a Match block
UseDNS                  {{ 'yes' if openssh_server_use_dns_allowed|bool else 'no' }}

PrintMotd               {{ 'yes' if openssh_server_print_motd|bool else 'no' }}

{% if (ansible_os_family|lower != 'alpine') or (ansible_os_family|lower == 'alpine' and openssh_version is defined and openssh_version is version_compare('7.7','<')) %}
PrintLastLog            {{ 'yes' if openssh_server_print_last_log|bool else 'no' }}
{% endif %}

Banner                  {{ '/etc/ssh/banner.txt' if openssh_server_banner_allowed|bool else 'none' }}

{% if ansible_os_family|lower == 'debian' %}
DebianBanner            {{ 'yes' if openssh_server_print_debian_banner|bool else 'no' }}
{% endif %}

{% if openssh_server_revoked_keys_list|length > 0 %}
# Reject keys that are explicitly blacklisted
RevokedKeys             {{ openssh_config_file_revoked_keys|string }}
{% endif %}


{% if openssh_server_sftp_enabled|bool %}
### ===========================
### SFTP matching configuration
### ===========================
    {% if openssh_server_sftp_match_condition|string|length > 0 %}
Subsystem sftp internal-sftp -l INFO
Match {{ openssh_server_sftp_match_condition|string }}
    ForceCommand internal-sftp -l INFO
    ChrootDirectory {{ openssh_server_sftp_chroot_dir|string }}
    ## Disable root login, even via certificates.
    PermitRootLogin no
    ## Disable password-based authentication. It can allow for potentially easier brute-force attacks.
    PasswordAuthentication no
    ## To enable empty passwords, change to "yes" (NOT RECOMMENDED)
    PermitEmptyPasswords no
    ## The keyboard-interactive authentication is more complex request for arbitrary number of pieces of information.
    ## For each piece of information the server sends the label of the prompt. Moreover it allows the server to provide
    ## lenghty description of the overall "form". The server can also specify which inputs are secret (needs to be
    ## obfuscated when user types them) and which are not.
    ## Though in majority of cases the keyboard-interactive authentication is used to request a single "secret" password
    ## prompt, so there's hardly any difference to the password authentication.
    ## That's the difference from protocol perspective.
    KbdInteractiveAuthentication {{ 'yes' if openssh_server_keyboard_interactive_auth_allowed|bool else 'no' }}
    {% if (ansible_os_family|lower != 'alpine') or (ansible_os_family|lower == 'alpine' and openssh_version is defined and openssh_version is version_compare('7.7','<')) %}
    ## Disable Kerberos authentication, even if it is configured to be enabled somewhere above.
    KerberosAuthentication no
    {% endif %}
    {% if (ansible_os_family|lower != 'alpine') or (ansible_os_family|lower == 'alpine' and openssh_version is defined and openssh_version is version_compare('7.7','<')) %}
    ## Disable GSS-API authentication, even if it is configured to be enabled somewhere above.
    GSSAPIAuthentication no
    {% endif %}
    ## Disable tunneling
    PermitTunnel no
    ## Disable forwarding tcp connections, no real advantage without denied shell access
    AllowTcpForwarding no
    ## Disable agent forwarding, since local agent could be accessed through forwarded connection, no real advantages
    ## without denied shell access
    AllowAgentForwarding no
    # It is recommended to disable X11 forwarding, since local X11 display could be accessed through forwarded
    # connection.
    X11Forwarding no
    {% else %}
# Configuration, in case SFTP is used override default of no subsystems. These lines must appear at the *end* of
# sshd_config to override config above!
Subsystem sftp /usr/lib/openssh/sftp-server
    {% endif %}
{% endif %}


{% if openssh_server_match_group_list|length > 0 %}
### ============================
### Group matching configuration
### ============================
{%   for item in openssh_server_match_group_list %}
Match Group {{ item.group }}
{%     for rule in item['rules']|default([]) %}
    {{ rule | indent(4) }}
{%     endfor %}
{%   endfor %}
{% endif %}


{% if openssh_server_match_user_list|length > 0 %}
### ===========================
### User matching configuration
### ===========================
{%   for item in openssh_server_match_user_list %}
Match User {{ item.user }}
{%     for rule in item['rules']|default([]) %}
    {{ rule | indent(4) }}
{%     endfor %}
{%   endfor %}
{% endif %}


{% if openssh_server_match_address_list|length > 0 %}
### ========================================
### Source IP address matching configuration
### ========================================
{%   for item in openssh_server_match_address_list %}
Match Address {{ item.addr }}
{%     for rule in item['rules']|default([]) %}
    {{ rule | indent(4) }}
{%     endfor %}
{%   endfor %}
{% endif %}
